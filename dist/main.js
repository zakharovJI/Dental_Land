!function(e){var t={};function l(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.m=e,l.c=t,l.d=function(e,t,s){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(l.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)l.d(s,n,function(t){return e[t]}.bind(null,n));return s},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="",l(l.s=0)}([function(e,t,l){"use strict";l.r(t);l(1),l(2)},function(e,t,l){},function(e,t){document.addEventListener("DOMContentLoaded",()=>{let e=0,t=0,l=0,s=document.getElementsByClassName("dot"),n=document.getElementsByClassName("switcher__arrow-wrapper"),r=document.getElementsByClassName("slider-wrapper__item"),o=document.getElementsByClassName("images-wrapper__item"),a=document.getElementsByClassName("item__radio"),c=document.getElementsByClassName("footer-item__radio");for(let t=0;t<n.length;t++)n[t].onclick=(()=>{console.log("hkjhkjhs"),s[e].setAttribute("r","2"),s[e].style.stroke="#c4c4c4",s[e].style.fill="#c4c4c4",r[e].style.display="none",0===t?0!==e?(s[e-1].setAttribute("r","7"),s[e-1].style.stroke="#2d6b5f",s[e-1].style.fill="#2d6b5f",r[e-1].style.display="block",e-=1):(s[s.length-1].setAttribute("r","7"),s[s.length-1].style.stroke="#2d6b5f",s[s.length-1].style.fill="#2d6b5f",r[s.length-1].style.display="block",e=s.length-1):1===t&&(e!==s.length-1?(s[e+1].setAttribute("r","7"),s[e+1].style.stroke="#2d6b5f",s[e+1].style.fill="#2d6b5f",r[e+1].style.display="block",e+=1):(s[0].setAttribute("r","7"),s[0].style.stroke="#2d6b5f",s[0].style.fill="#2d6b5f",r[0].style.display="block",e=0))});for(let e=0;e<o.length;e++)o[e].onclick=(l=>{console.log(l.target),o[t].classList.toggle("item--big"),l.target.classList.toggle("item--big"),t=e});for(let e=0;e<a.length;e++)a[e].onchange=(()=>{c[l].checked="false",c[e].checked="true"}),c[e].onchange=(()=>{a[l].checked="false",a[e].checked="true"}),l=e;let i=document.getElementsByClassName("menu-toggler")[0],m=document.getElementsByClassName("menu-toggler--close")[0],d=document.getElementsByClassName("header")[0];console.log(i);let u=!0;i.onclick=(()=>{console.log("dsfdsf"),u&&(m.style.display="block",i.style.display="none",d.classList.toggle("header--menu-show"),document.getElementsByClassName("title-wrapper")[0].className="title-wrapper hidden",document.getElementsByClassName("menu-wrapper")[0].className.replace("menu-showed",""),document.getElementsByClassName("menu-wrapper")[0].className="menu-wrapper menu-showed"),u=!u}),m.onclick=(()=>{u||(m.style.display="none",i.style.display="block",d.classList.toggle("header--menu-show"),document.getElementsByClassName("title-wrapper")[0].className="title-wrapper showed",document.getElementsByClassName("menu-wrapper")[0].className="menu-wrapper menu-hidden"),u=!u})})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,